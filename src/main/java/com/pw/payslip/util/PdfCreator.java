package com.pw.payslip.util;

import java.io.File;
import java.io.FileOutputStream;
import java.util.Arrays;
import java.util.Map;
import java.util.Properties;

import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

public class PdfCreator {
	
	private static String FILE = "c:/work-git/FirstPdf.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    
    private Properties properties;
    
    
    public void createPdf(File location, Map data){
    	try {
    		PropertiesUtil propIUtil = new PropertiesUtil();
    		properties = propIUtil.loadProperties();
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addMetaData(document);
            addTitlePage(document, data);
            addContent(document, data);
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle("PaySlip PDF");
        document.addSubject("PaySlip");
        document.addAuthor("PTC");
        document.addCreator("PTC");
    }

    private void addTitlePage(Document document, Map data)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        String title = (String) properties.get(PayConstants.COMPANY_NAME_FIELD);
        System.out.println(title);
        preface.setAlignment(Element.ALIGN_CENTER);
        preface.add(new Paragraph(title, catFont));

        // Will create: Report generated by: _name, _date        

        document.add(preface);
        // Start a new page
        document.newPage();
    }

    private void addContent(Document document, Map data) throws DocumentException {
        
    	//Paragraph contentsPara = new Paragraph();

        Paragraph subPara = new Paragraph("Deductions", subFont);
        //contentsPara.add(subPara);
        
        createTable(subPara, data);

        // now add all this to the document
        document.add(subPara);

        

    }

    private void createTable(Paragraph paragraph, Map data)
            throws BadElementException {
         
        String deductions = (String) properties.get(PayConstants.DEDUCTIONS_FIELD);
        System.out.println(deductions);
		java.util.List<String> deductionFields = Arrays.asList(deductions.split("\\s*,\\s*")); 
		PdfPTable table = new PdfPTable(2);
	       
        
        // t.setBorderColor(BaseColor.GRAY);
        // t.setPadding(4);
        // t.setSpacing(4);
        // t.setBorderWidth(1);
		
		
		for (String s: deductionFields){
			String value = (String) data.get(s);
			if (value!=null){
				table.addCell(s);
				table.addCell(value);
			}			
		}	

		paragraph.add(table);

    }  

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }

}
